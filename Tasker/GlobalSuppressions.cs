// This file is used by Code Analysis to maintain SuppressMessage
// attributes that are applied to this project.
// Project-level suppressions either have no target or are given
// a specific target and scoped to a namespace, type, member, etc.

using System.Diagnostics.CodeAnalysis;

[assembly: SuppressMessage("Design", "CA1031:Do not catch general exception types", Justification = "<Pending>", Scope = "member", Target = "~M:Tasker.Infra.Persistence.Context.AppDbContext.LoadDatabase~System.Threading.Tasks.Task")]
[assembly: SuppressMessage("Design", "CA1031:Do not catch general exception types", Justification = "<Pending>", Scope = "member", Target = "~M:Tasker.Api.Controllers.NotesController.GetGeneralNoteAsync(System.String)~System.Threading.Tasks.Task{Microsoft.AspNetCore.Mvc.IActionResult}")]
[assembly: SuppressMessage("Design", "CA1031:Do not catch general exception types", Justification = "<Pending>", Scope = "member", Target = "~M:Takser.Api.Controllers.TasksGroupsController.PostGroupAsync(System.String,Tasker.App.Resources.TasksGroupResource)~System.Threading.Tasks.Task{Microsoft.AspNetCore.Mvc.IActionResult}")]
[assembly: SuppressMessage("Design", "CA1031:Do not catch general exception types", Justification = "<Pending>", Scope = "member", Target = "~M:Takser.Api.Controllers.TasksGroupsController.PutTaskGroupAsync(Tasker.App.Resources.TasksGroupResource)~System.Threading.Tasks.Task{Microsoft.AspNetCore.Mvc.IActionResult}")]
[assembly: SuppressMessage("Design", "CA1031:Do not catch general exception types", Justification = "<Pending>", Scope = "member", Target = "~M:Takser.Api.Controllers.TasksGroupsController.RemoveGroup(System.String)~System.Threading.Tasks.Task{Microsoft.AspNetCore.Mvc.IActionResult}")]
[assembly: SuppressMessage("Design", "CA1031:Do not catch general exception types", Justification = "<Pending>", Scope = "member", Target = "~M:Tasker.Api.Controllers.NotesController.GetPrivateNoteAsync(System.String)~System.Threading.Tasks.Task{Microsoft.AspNetCore.Mvc.IActionResult}")]
[assembly: SuppressMessage("Design", "CA1031:Do not catch general exception types", Justification = "<Pending>", Scope = "member", Target = "~M:Tasker.Infra.Persistence.Context.AppDbContext.SaveCurrentDatabase~System.Threading.Tasks.Task")]
[assembly: SuppressMessage("Design", "CA1031:Do not catch general exception types", Justification = "<Pending>", Scope = "member", Target = "~M:Takser.Api.Controllers.WorkTasksController.PostTaskAsync(System.String,Tasker.App.Resources.WorkTaskResource)~System.Threading.Tasks.Task{Microsoft.AspNetCore.Mvc.IActionResult}")]
[assembly: SuppressMessage("Design", "CA1031:Do not catch general exception types", Justification = "<Pending>", Scope = "member", Target = "~M:Takser.Api.Controllers.WorkTasksController.PutWorkTaskAsync(Tasker.App.Resources.WorkTaskResource)~System.Threading.Tasks.Task{Microsoft.AspNetCore.Mvc.IActionResult}")]
[assembly: SuppressMessage("Design", "CA1031:Do not catch general exception types", Justification = "<Pending>", Scope = "member", Target = "~M:Takser.Api.Controllers.WorkTasksController.RemoveTask(System.String)~System.Threading.Tasks.Task{Microsoft.AspNetCore.Mvc.IActionResult}")]
[assembly: SuppressMessage("Design", "CA1031:Do not catch general exception types", Justification = "<Pending>", Scope = "member", Target = "~M:Tasker.Api.Middlewares.ExceptionHandlingMiddleware.Invoke(Microsoft.AspNetCore.Http.HttpContext)~System.Threading.Tasks.Task")]
[assembly: SuppressMessage("Design", "RCS1075:Avoid empty catch clause that catches System.Exception.", Justification = "<Pending>", Scope = "member", Target = "~M:Tasker.Infra.Services.NoteService.CreatePrivateNote(System.String,System.String)~System.Threading.Tasks.Task{Tasker.Domain.Communication.IResponse{Tasker.App.Resources.Note.NoteResourceResponse}}")]
[assembly: SuppressMessage("Style", "IDE0090:Use 'new(...)'", Justification = "<Pending>", Scope = "member", Target = "~M:Tasker.Infra.Services.TasksGroupService.RemoveAsync(System.String)~System.Threading.Tasks.Task{Tasker.Domain.Communication.IResponse{TaskData.TasksGroups.ITasksGroup}}")]
[assembly: SuppressMessage("Style", "IDE0090:Use 'new(...)'", Justification = "<Pending>", Scope = "member", Target = "~M:Tasker.Infra.Services.TasksGroupService.FindWorkTasksByTasksGroupConditionAsync(System.Func{TaskData.TasksGroups.ITasksGroup,System.Boolean})~System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{TaskData.WorkTasks.IWorkTask}}")]
[assembly: SuppressMessage("Style", "IDE0090:Use 'new(...)'", Justification = "<Pending>", Scope = "member", Target = "~M:Tasker.Infra.Services.TasksGroupService.FindTasksGroupsByConditionAsync(System.Func{TaskData.TasksGroups.ITasksGroup,System.Boolean})~System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{TaskData.TasksGroups.ITasksGroup}}")]
